use UserType as user

interface UserType { 
  id: number;
  name: string;
  email: string;
  createdAt: string;
  updatedAt: string;
}

interface ArticleType {
  id: number;
  title: string;
  content: string;
  createdAt: string;
  updatedAt: string;
  author: UserType;
  published: boolean;
}
interface CommentType {
  id: number;
  content: string;
  createdAt: string;
  updatedAt: string;
  author: UserType;
  article: ArticleType; 
  published: boolean;
}

interface A {}
interface B extends A {}

subject Article of ArticleType {
  action create
  action read
  action edit extends read
  action archive extends edit
  action publish extends edit
  action delete extends archive
}
subject Comment of CommentType {
  action read
  action answer extends read
  action edit extends read
  action archive extends edit
  action delete extends archive
  action publish extends edit
}
role AdminUser {
  for Article {
    allow *
  }
  for Comment {
    allow *
  }
}
role NormalUser {
  for Article {
    when user.id == subject.author.id {
      allow archive
    } otherwise {
      allow read
    }
  }
}
